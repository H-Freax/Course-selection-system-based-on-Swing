/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.PersonList;
import model.User;
import model.Person;
import static ui.MainJFrame.writeDataToFile;
/**
 *
 * @author freax
 */
public class AdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminJPanel
     */
    private JPanel ViewContainer;
    private PersonList personList;
    private User user;
    private User selectuser;

    public AdminJPanel(JPanel ViewContainer) {

        initComponents();
        this.ViewContainer = ViewContainer;
        this.personList = personList;
//        this.user = user;
        txtNUID.setEditable(false);
        txtName.setEditable(false);
        txtUserName.setEditable(false);
        txtCharactor.setEditable(false);
        checkenabled.setEnabled(false);
        btnsaveuser.setVisible(false);
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        lblSearch = new javax.swing.JLabel();
        lblEnabled = new javax.swing.JLabel();
        checkenabled = new javax.swing.JCheckBox();
        btnedit = new javax.swing.JButton();
        btnsaveuser = new javax.swing.JButton();
        btnchangepwd = new javax.swing.JButton();
        lblCharactor = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblNUID = new javax.swing.JLabel();
        txtNUID = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        lblCharactor1 = new javax.swing.JLabel();
        lblUsername1 = new javax.swing.JLabel();
        lblName1 = new javax.swing.JLabel();
        lblNUID1 = new javax.swing.JLabel();
        txtNUID1 = new javax.swing.JTextField();
        lblEnabled1 = new javax.swing.JLabel();
        txtUserName1 = new javax.swing.JTextField();
        checkenabled1 = new javax.swing.JCheckBox();
        txtName1 = new javax.swing.JTextField();
        txtCharactor = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCharactor1 = new javax.swing.JTextField();
        changepwd = new javax.swing.JTextField();
        createpwd = new javax.swing.JTextField();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Profile");

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "NUID", "Enabled", "Charactor", "UserName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsers);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lblSearch.setText("NUID:");

        lblEnabled.setText("Enabled");

        checkenabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkenabledActionPerformed(evt);
            }
        });

        btnedit.setText("Edit");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btnsaveuser.setText("Save");
        btnsaveuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveuserActionPerformed(evt);
            }
        });

        btnchangepwd.setText("Change Password");
        btnchangepwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchangepwdActionPerformed(evt);
            }
        });

        lblCharactor.setText("Charactor");

        lblUsername.setText("User Name");

        lblName.setText("Name");

        lblNUID.setText("NUID");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        lblCharactor1.setText("Charactor");

        lblUsername1.setText("User Name");

        lblName1.setText("Name");

        lblNUID1.setText("NUID");

        lblEnabled1.setText("Enabled");

        checkenabled1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkenabled1ActionPerformed(evt);
            }
        });

        txtCharactor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCharactorActionPerformed(evt);
            }
        });

        jLabel1.setText("Password");

        txtCharactor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCharactor1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearch)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnView)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblEnabled)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(checkenabled))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCharactor)
                                    .addComponent(lblName)
                                    .addComponent(lblNUID)
                                    .addComponent(lblUsername))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNUID, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCharactor, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnchangepwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnedit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnsaveuser, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                    .addComponent(changepwd))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblEnabled1)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkenabled1)
                                    .addComponent(createpwd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(102, 102, 102))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCharactor1)
                                    .addComponent(lblName1)
                                    .addComponent(lblNUID1)
                                    .addComponent(lblUsername1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtNUID1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                        .addComponent(txtName1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                        .addComponent(txtUserName1, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                                    .addComponent(txtCharactor1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(76, 76, 76))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(114, 114, 114))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnDelete)
                    .addComponent(jButton1)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSearch))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNUID1)
                            .addComponent(txtNUID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsername1)
                            .addComponent(txtUserName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCharactor1)
                            .addComponent(txtCharactor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEnabled1)
                            .addComponent(checkenabled1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(changepwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnchangepwd)
                                .addGap(18, 18, 18)
                                .addComponent(btnedit)
                                .addGap(18, 18, 18)
                                .addComponent(btnsaveuser))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNUID)
                                    .addComponent(txtNUID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblName))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblUsername)
                                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblCharactor)
                                    .addComponent(txtCharactor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(createpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblEnabled)
                    .addComponent(checkenabled))
                .addGap(18, 18, 18)
                .addComponent(btnCreate)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selectedRowIndex = tblUsers.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }


        DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        String selectedUsername = (String) model.getValueAt(selectedRowIndex, 4);

        // Now, you need to search for the User with the selected username
        Person selectedPerson = null;
        User selectedUser = null;

        for (Person person : personList.getPersonhistory()) {
            for (User user : person.getUsers()) {
                if (user.getUsername().equals(selectedUsername)) {
                    selectedPerson = person;
                    selectedUser = user;
                    break; // Exit the loop once a match is found
                }
            }
            if (selectedUser != null) {
                break; // Exit the outer loop once a match is found
            }
        }

        this.selectuser = selectedUser;
        if (selectedUser != null) {
            txtNUID.setText(String.valueOf(selectedPerson.getNUID()));
            txtName.setText(String.valueOf(selectedPerson.getName()));
            txtUserName.setText(String.valueOf(selectedUser.getUsername()));
            txtCharactor.setText(String.valueOf(selectedUser.getRole()));
            checkenabled.setSelected(selectedUser.isEnabled());
        } else {
            // Handle the case where no matching User is found
            JOptionPane.showMessageDialog(this, "User not found for the selected username.");
            txtNUID.setText("");
            txtName.setText("");
            txtUserName.setText("");
            txtCharactor.setText("");
            checkenabled.setSelected(false);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
//        // TODO add your handling code here:
        int selectedRowIndex = tblUsers.getSelectedRow();

        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

       DefaultTableModel model = (DefaultTableModel) tblUsers.getModel();
        String selectedUsername = (String) model.getValueAt(selectedRowIndex, 4);

        // Now, you need to search for the User with the selected username
        Person selectedPerson = null;
        User selectedUser = null;

        for (Person person : personList.getPersonhistory()) {
            for (User user : person.getUsers()) {
                if (user.getUsername().equals(selectedUsername)) {
                    selectedPerson = person;
                    selectedUser = user;
                    break; // Exit the loop once a match is found
                }
            }
            if (selectedUser != null) {
                break; // Exit the outer loop once a match is found
            }
        }

        this.selectuser = selectedUser;
        if (selectedUser != null) {
            if(selectuser==this.user){
                JOptionPane.showMessageDialog(this, "Can't delete your self.");
            }else{
                if(selectedPerson.getUsers().size()>1){
                    selectedPerson.deleteUser(selectedUser);
                }else{
                    personList.deletePerson(selectedPerson);
                }

                JOptionPane.showMessageDialog(this, "Vital signs deleted.");
            }
        } else {
            // Handle the case where no matching User is found
            JOptionPane.showMessageDialog(this, "Please select one.");
            txtNUID.setText("");
            txtName.setText("");
            txtUserName.setText("");
            txtCharactor.setText("");
            checkenabled.setSelected(false);
        }

        writeDataToFile(personList, "personlist.txt");
        PersonList personList = MainJFrame.readDataFromFile("personlist.txt");
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            populateTablebyNUID(txtSearch.getText());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Not found.");
        }// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void checkenabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkenabledActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkenabledActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        String name = txtName1.getText();
        String nuid = txtNUID1.getText();
        String username = txtUserName1.getText();
        String role = txtCharactor1.getText();
        String enable = checkenabled1.getText();
        String pwd = createpwd.getText();

        // Check if a person with the same NUID exists
        Person existingPerson = personList.searchPersonByNUID(nuid);

        if (existingPerson != null) {
            // If a person with the same NUID exists, add the user to that person

            User user = new User(username, pwd,new ArrayList<>(), true, role);
            user.setNowpwd(user.hashPassword(pwd));
            user.getPwds().add(user.hashPassword(pwd));
            existingPerson.addUser(user);
        } else {
            // Otherwise, create a new person and add the user to it
            Person newPerson = new Person(name, nuid);
            User user = new User(username,pwd,new ArrayList<>(), true, role);
            user.setNowpwd(user.hashPassword(pwd));
            user.getPwds().add(user.hashPassword(pwd));
            newPerson.addUser(user);
            personList.addPerson(newPerson);
        }
        // TODO add your handling code here:
        writeDataToFile(personList, "personlist.txt");
        PersonList personList = MainJFrame.readDataFromFile("personlist.txt");
        JOptionPane.showMessageDialog(this, "Success!");
        populateTable();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnsaveuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveuserActionPerformed
        Person p = personList.searchPersonByusername(selectuser.getUsername());
        p.setNUID(txtNUID.getText());
        p.setName(txtName.getText());
        p.getUserbyName(selectuser.getUsername()).setUsername(txtUserName.getText());
        p.getUserbyName(selectuser.getUsername()).setRole(txtCharactor.getText());
        p.getUserbyName(selectuser.getUsername()).setEnabled(checkenabled.isSelected());


        writeDataToFile(personList, "personlist.txt");
        txtNUID.setEditable(false);
        txtName.setEditable(false);
        txtUserName.setEditable(false);
        txtCharactor.setEditable(false);
        checkenabled.setEnabled(false);
        btnsaveuser.setVisible(false);
        btnedit.setVisible(true);
        this.personList = MainJFrame.readDataFromFile("personlist.txt");
        populateTable();// TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_btnsaveuserActionPerformed

    private void checkenabled1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkenabled1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkenabled1ActionPerformed

    private void txtCharactorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCharactorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCharactorActionPerformed

    private void txtCharactor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCharactor1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCharactor1ActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        txtNUID.setEditable(true);
        txtName.setEditable(true);
        txtUserName.setEditable(true);
        txtCharactor.setEditable(true);
        checkenabled.setEnabled(true);
        btnsaveuser.setVisible(true);
        btnedit.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_btneditActionPerformed

    private void btnchangepwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchangepwdActionPerformed
        if(changepwd.getText()==""){
            JOptionPane.showMessageDialog(this, "Please enter new password.");
        }
        Person p = personList.searchPersonByusername(selectuser.getUsername());

        if(selectuser.setNowpwd(selectuser.hashPassword(changepwd.getText()))){
            JOptionPane.showMessageDialog(this, "Success");
            writeDataToFile(personList, "personlist.txt");
        }else{
            JOptionPane.showMessageDialog(this, "Please not use history password.");
        }
    }//GEN-LAST:event_btnchangepwdActionPerformed

    private void populateTable(){
        DefaultTableModel model = (DefaultTableModel)tblUsers.getModel();
        model.setRowCount(0);

        for(Person vs : personList.getPersonhistory()){
            ArrayList<User> users = vs.getUsers();
            for(User user:users){
                Object[] row = new Object[5];
                row[0] = vs.getName();
                row[1] = vs.getNUID();
                row[2] = user.isEnabled();
                row[3] = user.getRole();
                row[4] = user.getUsername();

                model.addRow(row);
            }
        }
    }

    private void populateTablebyNUID(String nuid){
        DefaultTableModel model = (DefaultTableModel)tblUsers.getModel();
        model.setRowCount(0);
        Person vs = personList.searchPersonByNUID(nuid);

        ArrayList<User> users = vs.getUsers();
        for(User user:users){
                Object[] row = new Object[5];
                row[0] = vs.getName();
                row[1] = vs.getNUID();
                row[2] = user.isEnabled();
                row[3] = user.getRole();
                row[4] = user.getUsername();

                model.addRow(row);
        }
        writeDataToFile(personList, "personlist.txt");
        this.personList = MainJFrame.readDataFromFile("personlist.txt");

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnchangepwd;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnsaveuser;
    private javax.swing.JTextField changepwd;
    private javax.swing.JCheckBox checkenabled;
    private javax.swing.JCheckBox checkenabled1;
    private javax.swing.JTextField createpwd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCharactor;
    private javax.swing.JLabel lblCharactor1;
    private javax.swing.JLabel lblEnabled;
    private javax.swing.JLabel lblEnabled1;
    private javax.swing.JLabel lblNUID;
    private javax.swing.JLabel lblNUID1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsername1;
    private javax.swing.JTable tblUsers;
    private javax.swing.JTextField txtCharactor;
    private javax.swing.JTextField txtCharactor1;
    private javax.swing.JTextField txtNUID;
    private javax.swing.JTextField txtNUID1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtUserName;
    private javax.swing.JTextField txtUserName1;
    // End of variables declaration//GEN-END:variables
}
