/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.UserInterface.WorkAreas.StudentRole.Registration;

import Business.Course.Course;
import Business.Course.CourseDirectory;
import Business.Course.CourseStudent;
import Business.Course.CourseVO;
import Business.Person.Student;
import Tools.MySQLConnectionUtil;
import com.mysql.cj.util.StringUtils;

import java.awt.CardLayout;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author zhangjinming
 */
public class StudentRegisterJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentRegisterJPanel
     */
    private JPanel ViewContainer;

    private CourseDirectory courseDirectory ;

    private List<CourseVO> courseVOList = new ArrayList<>();

    private Student student;
    CourseVO selectedCourse;
    Connection connection= MySQLConnectionUtil.getConnection();

    public StudentRegisterJPanel(Student student) {
        courseDirectory = new CourseDirectory(MySQLConnectionUtil.getConnection());//数据传到了courseList
        initComponents();
        this.ViewContainer = ViewContainer;
        this.student = student;
        getOpenCourses(null);
        populateTable();

        tblRegister.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tblRegister.getSelectedRow(); // 获取所点选行的索引
                DefaultTableModel model = (DefaultTableModel) tblRegister.getModel(); //Have the access to the table;


                if(row != -1) { // 如果行已被选择

                    Object id = model.getValueAt(row, 0); // 获取所选行的第1列值

                    for (CourseVO courseVO:courseVOList){
                        if (courseVO.getId().equals((String)id)){
                            selectedCourse=courseVO;
                            txtCourseId.setText(courseVO.getId());
                            txtCourseName.setText(courseVO.getName());
                            txtSemester.setText(courseVO.getSemester());
                            txtProfessor.setText(courseVO.getProfessor());
                            txtCourseLocation.setText(courseVO.getLocation());
                            courseIntroductionTextArea.setText(courseVO.getIntroduction());
                            txtStudentLimited.setText(courseVO.getStudentLimit() + "");
                            try {
                                if((courseVO.getStudentCount()+"").equals(selectedCourse.calculateStudentCount(connection)+"")){
                                    txtStudentCount.setText(courseVO.getStudentCount() + "");
                                }else{
                                    courseVO.setStudentCount(selectedCourse.calculateStudentCount(connection));
                                    courseVO.updateInDatabase(connection);
                                }

                            } catch (SQLException e) {
                                throw new RuntimeException(e);
                            }
                            txtStudentCount.setText(courseVO.getStudentCount() + "");
                        }
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblRegister = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        txtCourseId = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCourseName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtSemester = new javax.swing.JTextField();
        txtProfessor = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCourseLocation = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnEnroll = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        courseIntroductionTextArea = new javax.swing.JTextArea();
        lblStudentLimited3 = new javax.swing.JLabel();
        txtStudentLimited = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txtStudentCount = new javax.swing.JTextField();
        txtProfessorRate = new javax.swing.JTextField();

        jTabbedPane1.setBackground(new java.awt.Color(204, 255, 204));
        jTabbedPane1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblRegister.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Course Id", "Course Name", "Professor Name", "Professor Topic", "Professor Language", "Course Region"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblRegister);

        jLabel9.setText("Course ID:");

        jLabel10.setText("Course Name:");

        jLabel11.setText("Semester");

        jLabel12.setText("Professor");

        jLabel13.setText("Course Location");

        jLabel14.setText("Course Introduction");

        jLabel15.setText("Professor Rating");

        btnEnroll.setText("Enroll");
        btnEnroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnrollActionPerformed(evt);
            }
        });

        courseIntroductionTextArea.setColumns(20);
        courseIntroductionTextArea.setRows(5);
        jScrollPane5.setViewportView(courseIntroductionTextArea);

        lblStudentLimited3.setText("Student Limited:");

        jLabel36.setText("Student Count:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(btnSearch)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel36)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(54, 54, 54)
                                    .addComponent(txtCourseLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(81, 81, 81)
                                    .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(73, 73, 73)
                                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(81, 81, 81)
                                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(54, 54, 54)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtProfessorRate, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(30, 30, 30))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(lblStudentLimited3)
                                            .addGap(60, 60, 60)))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane5)
                                        .addComponent(txtStudentLimited)
                                        .addComponent(txtStudentCount, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(58, 58, 58))
                    .addComponent(btnEnroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSearch)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCourseId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtSemester, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtProfessorRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtCourseLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStudentLimited3)
                    .addComponent(txtStudentLimited, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtStudentCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnEnroll, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(240, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel3);

        jTabbedPane1.addTab(" Registration", jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 909, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        getOpenCourses(txtSearch.getText());
        populateTable();

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnEnrollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnrollActionPerformed
        // TODO add your handling code here:
        try {
            Course course = getCourseInfoByID(txtCourseId.getText());

            if(course.getStudentLimit()<= course.getStudentCount()){
            //mention
                JOptionPane.showMessageDialog(this, "Cannot be assigned into the class!");
                return;
            }
            boolean enrolledStudentInCourseById = course.isEnrolledStudentInCourseById(MySQLConnectionUtil.getConnection(), student);
            if (enrolledStudentInCourseById){
                JOptionPane.showMessageDialog(this, "Already enrolled.");
            }else {
                //enroll
                enrollCourseForStudent(course, student);

                course.updateStudentCountInCourse(MySQLConnectionUtil.getConnection(),1);
                JOptionPane.showMessageDialog(this, "Successfully enrolled!");
                getOpenCourses(null);
                populateTable();
                txtCourseId.setText("");
                txtCourseName.setText("");
                txtSemester.setText("");
                txtProfessor.setText("");
                txtCourseLocation.setText("");
                courseIntroductionTextArea.setText("");
                txtStudentLimited.setText("");
                txtStudentCount.setText("");
            }
            student.updateStudentupdateInDatabase(Timestamp.valueOf(LocalDateTime.now()),connection);
        } catch (SQLException e) {

            e.printStackTrace();
            System.out.println("数据库异常！！");
        }

    }//GEN-LAST:event_btnEnrollActionPerformed

    private void enrollCourseForStudent(Course course, Student student) {
        try {
            course.addEnrolledStudent(MySQLConnectionUtil.getConnection(),student.getPersonID());
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("数据库异常！！");
        }
    }

    private Course getCourseInfoByID(String courseId) {

        try {
            return courseDirectory.loadCourseFromDatabase(courseId);
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("数据库异常！！");
        }
        return null;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnroll;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTextArea courseIntroductionTextArea;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblStudentLimited3;
    private javax.swing.JTable tblRegister;
    private javax.swing.JTextField txtCourseId;
    private javax.swing.JTextField txtCourseLocation;
    private javax.swing.JTextField txtCourseName;
    private javax.swing.JTextField txtProfessor;
    private javax.swing.JTextField txtProfessorRate;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSemester;
    private javax.swing.JTextField txtStudentCount;
    private javax.swing.JTextField txtStudentLimited;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblRegister.getModel(); //Have the access to the table;
        model.setRowCount(0); //初始化？？

        for(CourseVO course : courseVOList){

            Object[] row = new Object[6];
            row[0] = course.getId();
            row[1] = course.getName();
            row[2] = course.getProfessor();
            row[3] = course.getTopics();
            row[4] = course.getLanguage();
            row[5] = course.getRegion();
            //设置3R对应

            model.addRow(row);

        }
    }


    public List<CourseVO> getOpenCourses(String keyWords){
        CourseDirectory courseDirectory = new CourseDirectory(MySQLConnectionUtil.getConnection());//数据传到了courseList
        List<CourseVO> cvs= new ArrayList<>();;
        try {
            courseVOList = courseDirectory.loadCourseListFromDatabase(keyWords);
            CourseStudent cs = new CourseStudent(MySQLConnectionUtil.getConnection());


            for(CourseVO cv : courseVOList){
                if(!cs.isStudentEnrolledInCourse(student.getPersonID(),cv.getId())){
                    cvs.add(cv);
                }
            }
            courseVOList=cvs;
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("数据库异常！！");
        }
        return courseVOList;
    }
}
